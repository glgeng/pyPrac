角色:学校、学员、课程、讲师
要求:
1. 创建北京、上海 2 所学校
2. 创建linux , python , go 3个课程 ， linux\py 在北京开， go 在上海开
3. 课程包含，周期，价格，通过学校创建课程 
4. 通过学校创建班级， 班级关联课程、讲师
5. 创建学员时，选择学校，关联班级
6. 创建讲师角色时要关联学校， 
7. 提供两个角色接口
8. 学员视图， 可以注册， 交学费， 选择班级，
9. 讲师视图， 讲师可管理自己的班级， 上课时选择班级， 查看班级学员列表 ， 修改所管理的学员的成绩 
10. 管理视图，创建讲师， 创建班级，创建课程

11. 上面的操作产生的数据都通过pickle序列化保存到文件里


先来个框架：

　　三个视图：学员视图 讲师视图 管理视图  三个视图即为三个管理接口

　　五个角色：学校、学员、课程、讲师、班级　　五个角色即需要定义5个类

把要求对应成自己看懂的话：

　　① 创建北京、上海 2 所学校　　　 分析：定义学校类，通过类去创建学校实例
　　② 创建linux , python , go 3个课程 ，linux\py 在北京开，go 在上海开　　分析：定义课程类，通过课程类去创建课程实例

　  ③ 课程包含，周期，价格，通过学校创建课程 　　分析：课程类里要包含周期、价格  课程实例通过学校类去创建

　　④ 班级关联课程、班级关联讲师　　分析：可以创建班级的时候需输入关联的课程，创建讲师的时候需输入关联的班级；一个班级对应一个课程 一个班级对应一个讲师

　　⑤ 通过学校创建班级， 班级关联课程、讲师   分析：跟④一样

　　⑥ 创建学员时，选择学校，关联班级　　分析：定义学员类，创建时选择学校，选择班级，通过学校类创建学员实例，班级类里面要有包含学员的信息的字典

　　⑦ 创建讲师角色时要关联学校　　分析：之前一样，依然通过学校类去创建讲师实例

　　⑧ 学员视图 可以注册， 交学费， 选择班级  　　分析：看⑥ 学员选择班级后，通过班级关联的课程，打印课程的学费

　　⑨ 讲师视图， 讲师可以.....bala....bala    　　分析：讲师视图登录需要讲师名，通过讲师名可以找到对应的班级实例，班级实例里包含班级名，课程名，学员信息等

　　注：一个班级对应一个课程 一个班级对应一个讲师

　　　　一个课程可有多个班级

　　　　一个讲师可教授多个班级

　　　　一个学员可学习多个班级的课

分析下管理视图：

　　　　　　　　管理视图具有的功能创建讲师， 创建班级，创建课程，这些都是通过学校创建（即通过学校类的方法调用），除了创建以外我们还需要增加查询讲师、班级、课程的功能（查看相应的信息），管理视图要有6个功能

分析下讲师视图：

　　　　　　　 讲师视图可查看所授课的班级，班级学生信息  讲师视图具有2个功能

分析下学生视图：

　　　　　　　学生视图，要选择学校，选择班级（显示班级的名称，课程，价钱），添加到对应的班级内

咋做数据库呢？！

　　　　　　　 看看注里面的内容就知道对应关系比较多，对应关系比较多就意味着，一个数据改了所有跟它有关系的数据都有变动，比如班级s14关联讲师alex，学生eric报名后，讲师alex自己的班级学生信息里就要能查到eric的个人信息；当然如果用数据库去做的话，非常简单；but 咱还没学数据库呢，只能用文件的方式存在本地，如果存多个文件的话，一个文件修改另一个文件也跟着修改（互相关联），所以为了简便，就只定义一个伪数据库；通过shelve模块，存储类型{“北京”：北京实例，“上海”：上海实例}