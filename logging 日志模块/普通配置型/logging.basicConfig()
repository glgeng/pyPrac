logging.basicConfig()函数中可通过具体参数来更改logging模块默认行为
缺点：不能将一个日志信息即输出到屏幕，同时输出到文件
如何克服？
    使用logger对象的形式来操作日志文件

先来一个模板
logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s - %(filename)s - [line:%(lineno)d] - %(levelname)s - %(message)s',
    datefmt = '%a, %d %b %Y %H:%M:%S',
    filename = '/tmp/test.log',
    filemode = 'w'
)


logging.basicConfig()函数的参数：
    1.filename：用指定的文件名创建FiledHandler，这样日志会被存储在指定的文件中。
    2.filemode：文件打开方式，在指定了filename时使用这个参数，默认值为“a”还可指定为“w”。
    3.format：指定handler使用的日志显示格式。
            format参数中可能用到的格式化串：
                %(name)s Logger的名字
                %(levelno)s 数字形式的日志级别
                %(levelname)s 文本形式的日志级别
                %(pathname)s 调用日志输出函数的模块的完整路径名，可能没有
                %(filename)s 调用日志输出函数的模块的文件名
                %(module)s 调用日志输出函数的模块名
                %(funcName)s 调用日志输出函数的函数名
                %(lineno)d 调用日志输出函数的语句所在的代码行
                %(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示
                %(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数
                %(asctime)s 字符串形式的当前时间。默认格式是 “2003-07-08 16:49:45,896”。逗号后面的是毫秒
                %(thread)d 线程ID。可能没有
                %(threadName)s 线程名。可能没有
                %(process)d 进程ID。可能没有
                %(message)s用户输出的消息
    4.datefmt：指定日期时间格式。
    5.level：设置rootlogger（后边会讲解具体概念）的日志级别
    6.stream：用指定的stream创建StreamHandler。可以指定输出到sys.stderr,sys.stdout或者文件(f=open(‘test.log’,’w’))，默认为sys.stderr。若同时列出了filename和stream两个参数，则stream参数会被忽略。



日志的分级
    #默认级别为warning，默认打印到终端

    # logging.basicConfig(level = logging.DEBUG)
    # logging.debug('调试debug')          调试模式
    # logging.info('消息info')            基础信息
    # logging.warning('警告warn')         警告
    # logging.error('错误error')          错误
    # logging.critical('严重critical')    严重错误

